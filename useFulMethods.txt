Validating email in swing
String email = emailTxt.getText();
String emailRegx = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
if(!email.matches(emailRegx))
{
	display error message..
}

setting timer

import javax.swing.Timer
Timer wariningTimer = new Timer(time,e->{})
if (warningTimer != null && warningTimer.isRunning()) {
		    warningTimer.stop();
		}
		
		warningTimer = new Timer(4000, e -> {
		    warningTxt.setText("");
		});
		warningTimer.setRepeats(false); 
		warningTimer.start();

Displaying data in table 
	private void displayData()
	{
		ProductService service  = new ProductServiceImpl();
		List<Product> plist = service.getAllProducts();
		
		DefaultTableModel tmodel = (DefaultTableModel) table.getModel();
		
		tmodel.setRowCount(0);
		
		for(Product pd:plist)
		{
			tmodel.addRow(new Object[] {pd.getId(),pd.getName(),pd.getPrice(),pd.getCompany()});
			
		}
		
	}

Deleting row from table:
		JButton btnDelete = new JButton("Delete");
		btnDelete.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if(table.getSelectedRow()<0)
				{
					showMessage("Select row to delete");
					return;
				}
				
				int srow = table.getSelectedRow();
				int sid = (int) table.getModel().getValueAt(srow,0);
				StudentService service = new StudentServiceImpl();
				service.deleteStudent(sid);
				showMessage("Student deleted successfully",Color.GREEN);
				displayData();
				return;
			}


What after adding? 
	JButton btnAdd = new JButton("Add");
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				clearForm();
				 JFrame addStudent = new AddStudent();
			        addStudent.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // ensure it triggers windowClosed
			        addStudent.addWindowListener(new WindowAdapter() {
			            @Override
			            public void windowClosed(WindowEvent we) {
			                displayData(); // now this runs AFTER the AddProductForm is closed
			            }
			        });
			        addStudent.setVisible(true);
				
				
			}
		});
		btnAdd.setFont(new Font("Tahoma", Font.PLAIN, 18));
		btnAdd.setBounds(856, 510, 99, 27);
		contentPane.add(btnAdd);
		
date
    dateTxt.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd")).toString());
time
    timeTxt.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("HH:mm:ss")));

		 Timer timer = new Timer(1000, e -> {
	            LocalDateTime now = LocalDateTime.now();
	            timeTxt.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("hh:mm:ss a")));
	            dateTxt.setText(LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd")).toString());
	        });
	        timer.start();